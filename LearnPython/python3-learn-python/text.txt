@RequestMapping(value="/goods/list", method= RequestMethod.GET)
public String goodsList(HttpServletRequest request,
					   @RequestParam(value = "page", defaultValue = "1") int page,
					   @RequestParam(value = "catelogId", defaultValue = "0") int catelogId,
					   @RequestParam(value = "text", required = false) String text,
					   Model model) {
	User currentUser = (User) request.getSession().getAttribute(GgeeConst.CUR_USER);
	model.addAttribute(GgeeConst.CUR_USER, currentUser);
	if (currentUser == null || currentUser.getPower() != 90) {
		return "404";
	} else {
		Map<String, Object> data = goodsService.getGoodsByCatelogIdAndNameAndDescrible(
				page, GgeeConst.goodsPageSize, catelogId, text, text
		);
		List<Goods> goodsList = (List<Goods>) data.get("goodsList");
		List<Integer> userIds = goodsList.stream().
				map(Goods::getUserId).collect(Collectors.toList());
		List<User> users = userService.getUsersByIds(userIds);
		Map<Integer, User> id2user = users.stream().
				collect(Collectors.toMap(User::getId, user -> user));
		for (Goods goods : goodsList) {
			goods.setUser(id2user.get(goods.getUserId()));
		}
		List<Catelog> catelogs = catelogService.getAllCatelog();
		data.put("catelogs", catelogs);
		data.put("catelogId", catelogId);
		data.put("text", text);
		model.addAttribute(GgeeConst.DATA, data);
		return "/manage/manage-goodsList";
	}
}